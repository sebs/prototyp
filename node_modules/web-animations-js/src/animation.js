// Copyright 2014 Google Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
//     You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//     See the License for the specific language governing permissions and
// limitations under the License.
(function(shared,scope,testing){shared.sequenceNumber=0;var AnimationEvent=function AnimationEvent(target,currentTime,timelineTime){this.target=target;this.currentTime=currentTime;this.timelineTime=timelineTime;this.type="finish";this.bubbles=!1;this.cancelable=!1;this.currentTarget=target;this.defaultPrevented=!1;this.eventPhase=Event.AT_TARGET;this.timeStamp=Date.now()};scope.Animation=function(effect){this.id="";if(effect&&effect._id){this.id=effect._id}this._sequenceNumber=shared.sequenceNumber++;this._currentTime=0;this._startTime=null;this._paused=!1;this._playbackRate=1;this._inTimeline=!0;this._finishedFlag=!0;this.onfinish=null;this._finishHandlers=[];this._effect=effect;this._inEffect=this._effect._update(0);this._idle=!0;this._currentTimePending=!1};scope.Animation.prototype={_ensureAlive:function _ensureAlive(){// If an animation is playing backwards and is not fill backwards/both
// then it should go out of effect when it reaches the start of its
// active interval (currentTime == 0).
if(0>this.playbackRate&&0===this.currentTime){this._inEffect=this._effect._update(-1)}else{this._inEffect=this._effect._update(this.currentTime)}if(!this._inTimeline&&(this._inEffect||!this._finishedFlag)){this._inTimeline=!0;scope.timeline._animations.push(this)}},_tickCurrentTime:function _tickCurrentTime(newTime,ignoreLimit){if(newTime!=this._currentTime){this._currentTime=newTime;if(this._isFinished&&!ignoreLimit)this._currentTime=0<this._playbackRate?this._totalDuration:0;this._ensureAlive()}},get currentTime(){if(this._idle||this._currentTimePending)return null;return this._currentTime},set currentTime(newTime){newTime=+newTime;if(isNaN(newTime))return;scope.restart();if(!this._paused&&null!=this._startTime){this._startTime=this._timeline.currentTime-newTime/this._playbackRate}this._currentTimePending=!1;if(this._currentTime==newTime)return;if(this._idle){this._idle=!1;this._paused=!0}this._tickCurrentTime(newTime,!0);scope.applyDirtiedAnimation(this)},get startTime(){return this._startTime},set startTime(newTime){newTime=+newTime;if(isNaN(newTime))return;if(this._paused||this._idle)return;this._startTime=newTime;this._tickCurrentTime((this._timeline.currentTime-this._startTime)*this.playbackRate);scope.applyDirtiedAnimation(this)},get playbackRate(){return this._playbackRate},set playbackRate(value){if(value==this._playbackRate){return}var oldCurrentTime=this.currentTime;this._playbackRate=value;this._startTime=null;if("paused"!=this.playState&&"idle"!=this.playState){this._finishedFlag=!1;this._idle=!1;this._ensureAlive();scope.applyDirtiedAnimation(this)}if(null!=oldCurrentTime){this.currentTime=oldCurrentTime}},get _isFinished(){return!this._idle&&(0<this._playbackRate&&this._currentTime>=this._totalDuration||0>this._playbackRate&&0>=this._currentTime)},get _totalDuration(){return this._effect._totalDuration},get playState(){if(this._idle)return"idle";if(null==this._startTime&&!this._paused&&0!=this.playbackRate||this._currentTimePending)return"pending";if(this._paused)return"paused";if(this._isFinished)return"finished";return"running"},_rewind:function _rewind(){if(0<=this._playbackRate){this._currentTime=0}else if(this._totalDuration<1/0){this._currentTime=this._totalDuration}else{throw new DOMException("Unable to rewind negative playback rate animation with infinite duration","InvalidStateError")}},play:function play(){this._paused=!1;if(this._isFinished||this._idle){this._rewind();this._startTime=null}this._finishedFlag=!1;this._idle=!1;this._ensureAlive();scope.applyDirtiedAnimation(this)},pause:function pause(){if(!this._isFinished&&!this._paused&&!this._idle){this._currentTimePending=!0}else if(this._idle){this._rewind();this._idle=!1}this._startTime=null;this._paused=!0},finish:function finish(){if(this._idle)return;this.currentTime=0<this._playbackRate?this._totalDuration:0;this._startTime=this._totalDuration-this.currentTime;this._currentTimePending=!1;scope.applyDirtiedAnimation(this)},cancel:function cancel(){if(!this._inEffect)return;this._inEffect=!1;this._idle=!0;this._paused=!1;this._finishedFlag=!0;this._currentTime=0;this._startTime=null;this._effect._update(null);// effects are invalid after cancellation as the animation state
// needs to un-apply.
scope.applyDirtiedAnimation(this)},reverse:function reverse(){this.playbackRate*=-1;this.play()},addEventListener:function addEventListener(type,handler){if("function"==typeof handler&&"finish"==type)this._finishHandlers.push(handler)},removeEventListener:function removeEventListener(type,handler){if("finish"!=type)return;var index=this._finishHandlers.indexOf(handler);if(0<=index)this._finishHandlers.splice(index,1)},_fireEvents:function _fireEvents(baseTime){if(this._isFinished){if(!this._finishedFlag){var event=new AnimationEvent(this,this._currentTime,baseTime),handlers=this._finishHandlers.concat(this.onfinish?[this.onfinish]:[]);setTimeout(function(){handlers.forEach(function(handler){handler.call(event.target,event)})},0);this._finishedFlag=!0}}else{this._finishedFlag=!1}},_tick:function _tick(timelineTime,isAnimationFrame){if(!this._idle&&!this._paused){if(null==this._startTime){if(isAnimationFrame){this.startTime=timelineTime-this._currentTime/this.playbackRate}}else if(!this._isFinished){this._tickCurrentTime((timelineTime-this._startTime)*this.playbackRate)}}if(isAnimationFrame){this._currentTimePending=!1;this._fireEvents(timelineTime)}},get _needsTick(){return this.playState in{pending:1,running:1}||!this._finishedFlag},_targetAnimations:function _targetAnimations(){var target=this._effect._target;if(!target._activeAnimations){target._activeAnimations=[]}return target._activeAnimations},_markTarget:function _markTarget(){var animations=this._targetAnimations();if(-1===animations.indexOf(this)){animations.push(this)}},_unmarkTarget:function _unmarkTarget(){var animations=this._targetAnimations(),index=animations.indexOf(this);if(-1!==index){animations.splice(index,1)}}};if(WEB_ANIMATIONS_TESTING){testing.webAnimations1Animation=scope.Animation}})(webAnimationsShared,webAnimations1,webAnimationsTesting);